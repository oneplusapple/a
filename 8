8) a) Write the Python code and Execute the programto evaluate∫0to1 √1 + x^3dx using i) Trapezoidal rule ii) Simpson’s 1/3 rd rule iii) Simpson’s 3/8 rule
from numpy import *
a=0
b=1
p=6
n=7
h=(b-a)/p
x=linspace(a,b,n)
f=sqrt(1+x**3)
for i in range(0,n):
    print(round(f[i],ndigits=4))
TR=round((h/2)*(f[0]+2*sum(f[1:n-1])+f[n-1]),ndigits=4)
S13=round((h/3)*((f[0]+f[n-1])+4*sum(f[1:n-1:2]) +2*sum(f[2:n-1:2])),ndigits=4)
S38=round((3*h/8)*((f[0]+f[n-1])+2*sum(f[3:n-2:3])+3*sum(f[1:n:3]+(f[2:n-1:3]))),ndigits=4)
print("The required integral by Trapezoidal Rule is",TR)
print("The required integral by Simpson’s 1/3 Rule is",S13)
print("The required integral by Simpson’s 3/8 Rule is :",S38)
Output:-
1.0
1.0023
1.0184
1.0607
1.1386
1.2565
1.4142
The required integral by Trapezoidal Rule is 1.1139
The required integral by Simpson’s 1/3 Rule is 1.1114
The required integral by Simpson’s 3/8 Rule is 1.1114

b) Write the Python code and Execute program to find curl of F⃗ = xy^2î+ 2x^2yz ĵ − 3yz^2 k̂
from sympy.vector import*
from sympy import symbols
N=CoordSys3D('')
x,y,z=symbols('x,y,z')
A=N.x*N.y**2*N.i+2*N.x**2*N.y*N.z*N.j-3*N.y*N.z**2*N.k
print("The given scalar point function is:")
display(A)
D=Del()
p=D.dot(A)
display(p)
curlA=curl(A)
print("Curl of F is:")
display(curlA)
